// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	Models "search-engine/pkg/Models"

	mock "github.com/stretchr/testify/mock"
)

// DBFunctions is an autogenerated mock type for the DBFunctions type
type DBFunctions struct {
	mock.Mock
}

// AllPagesInCollection provides a mock function with given fields:
func (_m *DBFunctions) AllPagesInCollection() []Models.Webpage {
	ret := _m.Called()

	var r0 []Models.Webpage
	if rf, ok := ret.Get(0).(func() []Models.Webpage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Models.Webpage)
		}
	}

	return r0
}

// Search provides a mock function with given fields: keys
func (_m *DBFunctions) Search(keys []string) []Models.Webpage {
	ret := _m.Called(keys)

	var r0 []Models.Webpage
	if rf, ok := ret.Get(0).(func([]string) []Models.Webpage); ok {
		r0 = rf(keys)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Models.Webpage)
		}
	}

	return r0
}

// Start provides a mock function with given fields:
func (_m *DBFunctions) Start() {
	_m.Called()
}

// UploadWebpage provides a mock function with given fields: webpage
func (_m *DBFunctions) UploadWebpage(webpage *Models.Webpage) {
	_m.Called(webpage)
}

type mockConstructorTestingTNewDBFunctions interface {
	mock.TestingT
	Cleanup(func())
}

// NewDBFunctions creates a new instance of DBFunctions. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDBFunctions(t mockConstructorTestingTNewDBFunctions) *DBFunctions {
	mock := &DBFunctions{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
